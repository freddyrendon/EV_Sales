{"version":3,"file":"main.js","mappings":"6BA0DA,ECoFA,EDpFA,EAzDA,MACIA,cACIC,KAAKC,WACR,CAEDA,YACI,MAEMC,EAAMC,GAAGC,OAAO,UACjBC,OAAO,OACPC,KAAK,QAJI,KAKTA,KAAK,SAJK,KAMTC,EAAaJ,GAAGK,eACjBC,UAAU,CAACC,IAAWC,MACtBC,MAAM,CAAC,MAENC,EAAOV,GAAGW,UAAUP,WAAWA,GAErCJ,GAAGY,KAAK,gJAAgJ,SAAUC,EAAOC,GACrK,GAAID,EAAO,MAAMA,EAEjBd,EAAIgB,UAAU,QACTC,KAAKF,EAAOG,UAEZC,QACAhB,OAAO,QAEPC,KAAK,IAAKO,GACVP,KAAK,QAAQ,SAUbgB,KAAKpB,EAAIgB,UAAU,UAAUK,QAAQ,GACrCC,SAAQC,IACLA,EAAQC,iBAAiB,aAAa,WAElC,OAAQD,EAAQE,SAASC,WAAWC,IAEvC,GAJD,IAUP,GAGR,GCuFL,EA1IA,MACI9B,YAAY+B,GACR9B,KAAK8B,MAAQA,EACb9B,KAAK+B,cACR,CAEDA,eACI,IAAIC,MAAMC,SAASC,eAAe,aAAc,CAC5CC,KAAM,gBACNhB,KAAM,CACFiB,OAAQ,CAAC,kBACL,cACA,uBACA,uBACA,uBACA,SACA,eACA,SACA,SACA,eACA,eACA,aACA,cACA,aACA,mCACA,YACA,oBACA,gBACA,cACA,eACA,oBACA,wBACA,eACA,mBACA,wBACA,wBACA,yBACA,gBACA,mBACA,qBACA,cACA,cACA,sBACA,mBACA,kBACA,2BACA,oBACA,qBACA,gBACA,+BACA,cACA,6BACA,8BACA,aACA,WACA,0BACA,gBACA,gBACA,gBACA,iBACA,YACA,oBACA,qBACA,cACJC,SAAU,CACN,CACIC,MAAO,kBACPC,gBAAiB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WACltBpB,KAAM,CAAC,MACH,KACA,KACA,MACA,KACA,MACA,IACA,MACA,KACA,IACA,KACA,MACA,KACA,OACA,MACA,MACA,MACA,KACA,MACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,KACA,KACA,OACA,KACA,IACA,OACA,MACA,OACA,KACA,MACA,IACA,KACA,SAIhBqB,QAAS,CACLC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CACHD,SAAS,EACTpB,KAAM,4BAOrB,GCvILW,SAASP,iBAAiB,oBAAoB,KAG7B,IAAIkB,EACD,IAAIC,CAArB,G","sources":["webpack://electric_vehicles/./src/scripts/usMap.js","webpack://electric_vehicles/./src/scripts/barGraph.js","webpack://electric_vehicles/./src/index.js"],"sourcesContent":["\nclass Usmap {\n    constructor(){\n        this.drawUsmap();\n    }\n\n    drawUsmap(){\n        const width = 710;\n        const height = 600;\n        const svg = d3.select(\"#USmap\")\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\",height);\n\n        const projection = d3.geoAlbersUsa()\n            .translate([width / 2, height / 2]) // translate to center of screen\n            .scale([1000]); // scale things down so see entire US\n\n        const path = d3.geoPath().projection(projection);\n        // debugger\n        d3.json(\"https://gist.githubusercontent.com/Bradleykingz/3aa5206b6819a3c38b5d73cb814ed470/raw/a476b9098ba0244718b496697c5b350460d32f99/us-states.json\", function (error, uState) {\n            if (error) throw error;\n\n            svg.selectAll('path')\n                .data(uState.features)\n                // .data(uState.properties.name)\n                .enter()\n                .append('path')\n                // .append('text')\n                .attr(\"d\", path)\n                .attr('class','state')\n                // .attr('state', uState.features[0].properties.name)\n                // .text(function() {\n                //     return d\n                // })\n                // debugger\n\n\n                // \n                // debugger\n                .text(svg.selectAll('.state')._groups[0]\n                .forEach(element => {\n                    element.addEventListener('mouseover', function (){\n                        // return element.__data__.properties.name\n                        return (element.__data__.properties.name)\n                        // const barGraph = new Bargraph(element.__data__.properties.name)\n                    })\n                    \n                }))\n                debugger\n\n                \n            });\n\n            \n    }\n}\n\nexport default Usmap;","\nimport data from '../../data/10567_pev_sales';\n\n\nclass Bargraph {\n    constructor(state){\n        this.state = state;\n        this.drawBargraph();\n    }\n    \n    drawBargraph(){\n        new Chart(document.getElementById(\"bar-chart\"), {\n            type: 'horizontalBar',\n            data: {\n                labels: ['Audi A3 Plug In',\n                    'Audi e-tron',\n                    'BMW 3-series Plug In',\n                    'BMW 5-Series Plug In',\n                    'BMW 7-series Plug In',\n                    'BMW X5',\n                    'BMW active E',\n                    'BMW i3',\n                    'BMW i8',\n                    'Cadillac CT6',\n                    'Cadillac ELR',\n                    'Chevy Bolt',\n                    'Chevy Spark',\n                    'Chevy Volt',\n                    'Chrysler Pacifica Plug In Hybird',\n                    'Fiat 500E',\n                    'Ford C-Max Energi',\n                    'Ford Focus EV',\n                    'Ford Fusion',\n                    'Honda Accord',\n                    'Honda Clarity BEV',\n                    'Honda Clarity Plug In',\n                    'Honda Fit EV',\n                    'Hyundai Ioniq EV',\n                    'Hyundai Ioniq Plug In',\n                    'Hyundai Kona Electric',\n                    'Hyundai Sonata Plug In',\n                    'Jaguar I-Pace',\n                    'Kia Niro Plug In',\n                    'Kia Optima Plug In',\n                    'Kia Soul EV',\n                    'Kia niro EV',\n                    'MINI Countryman S E',\n                    'Mercedes B-Class',\n                    'Mercedes C350We',\n                    'Mercedes GLC 350e Hybrid',\n                    'Mercedes GLE 550e',\n                    'Mercedes S550 Plug',\n                    'Mitsubishi Ev',\n                    'Mitsubishi Outlander Plug In',\n                    'Nissan Leaf',\n                    'Porsche Cayenne S E-Hybird',\n                    'Porsche Panamera S E-Hybird',\n                    'Prius PHEV',\n                    'Smart ED',\n                    'Subaru Crosstrek Hybird',\n                    'Tesla Model S',\n                    'Tesla Model X',\n                    'Tesla model 3',\n                    'Toyota RAV4 EV',\n                    'VW e-Golf',\n                    'Volvo S90 Plug In',\n                    'Volvo XC60 Plug In',\n                    'Volvo-XC90'],\n                datasets: [\n                    {\n                        label: \"Number of Sales\",\n                        backgroundColor: [\"#3e95cd\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\", \"#8e5ea2\", \"#3cba9f\", \"#e8c3b9\", \"#c45850\"],\n                        data: [10191,\n                            5369,\n                            8326,\n                            17865,\n                            1149,\n                            16837,\n                            673,\n                            41988,\n                            6776,\n                            461,\n                            2892,\n                            58208,\n                            7399,\n                            156733,\n                            15854,\n                            15195,\n                            42231,\n                            9245,\n                            68509,\n                            1039,\n                            2816,\n                            30233,\n                            1071,\n                            1516,\n                            3355,\n                            1721,\n                            6185,\n                            2987,\n                            7440,\n                            2827,\n                            6507,\n                            1562,\n                            2533,\n                            4170,\n                            4881,\n                            3026,\n                            3169,\n                            1801,\n                            2104,\n                            6976,\n                            141888,\n                            7122,\n                            5742,\n                            116927,\n                            8485,\n                            880,\n                            162285,\n                            87033,\n                            296392,\n                            2399,\n                            18277,\n                            956,\n                            4305,\n                            7556]\n                    }\n                ]\n            },\n            options: {\n                legend: { display: false },\n                title: {\n                    display: true,\n                    text: 'Vehicle Sales by Model'\n                }\n            }\n        });\n\n\n\n    }\n}\nexport default Bargraph;","// import Map from './scripts/maps.js';\n// import lineGraph from './scripts/lineGraph.js'; \nimport Usmap from './scripts/usMap.js';\nimport Bargraph from './scripts/barGraph.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n   // const map = new Map();\n   // const Linegraph = new lineGraph();\n   const usMap = new Usmap();\n   const barGraph = new Bargraph();\n   \n})\n\n"],"names":["constructor","this","drawUsmap","svg","d3","select","append","attr","projection","geoAlbersUsa","translate","width","height","scale","path","geoPath","json","error","uState","selectAll","data","features","enter","text","_groups","forEach","element","addEventListener","__data__","properties","name","state","drawBargraph","Chart","document","getElementById","type","labels","datasets","label","backgroundColor","options","legend","display","title","Usmap","Bargraph"],"sourceRoot":""}
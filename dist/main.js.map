{"version":3,"file":"main.js","mappings":"6BA2GA,IA5FA,MACIA,cACIC,KAAKC,SACR,CAEDA,UACI,MAAMC,EAAMC,GAAGC,OAAO,OAClBC,GAASH,EAAII,KAAK,SAClBC,GAAUL,EAAII,KAAK,UAGjBE,EAAaL,GAAGM,eACjBC,MAAM,KACNC,UAAU,CAACN,EAAQ,EAAGE,EAAS,MAC/BK,UAAU,IAETC,EAAOV,GAAGW,UACXN,WAAWA,GAOhBL,GAAGY,KAAK,sCAAsC,SAAUC,EAAOC,GAC3D,GAAID,EAAO,MAAMA,EAEjBd,EAAIgB,OAAO,OAAQ,cACdC,MAAMC,SAASC,QAAQJ,EAAOA,EAAMK,QAAQC,OAC5CjB,KAAK,QAAS,QACdA,KAAK,IAAKO,GAEfX,EAAIgB,OAAO,OAAQ,cACdC,MAAMC,SAASI,KAAKP,EAAOA,EAAMK,QAAQG,WAAW,SAAUC,EAAGC,GAAK,OAAOD,IAAMC,CAAI,KACvFrB,KAAK,QAAS,YACdA,KAAK,IAAKO,EAClB,GAEJ,GCnDLe,SAASC,iBAAiB,oBAAoB,KAC/B,IAAIC,CAAhB,G","sources":["webpack://electric_vehicles/./src/scripts/maps.js","webpack://electric_vehicles/./src/index.js"],"sourcesContent":["// class Example {\n//     constructor(ele){\n//         this.ele = ele; \n//         this.ele.innerHTML = \"<h1> It's Alive!!!</h1>\";\n//         this.handleClick = this.handleClick.bind(this)\n//         this.ele.addEventListener('click', this.handleClick);\n//     }\n\n//     handleClick() {\n//         this.ele.children[0].innerText = \"Ouch\";\n//     }\n\n\n// }\n\nclass Map {\n    constructor(){\n        this.drawMap();\n    }\n\n    drawMap (){\n        const svg = d3.select(\"svg\"),\n            width = +svg.attr(\"width\"),\n            height = +svg.attr(\"height\");\n\n\n        const projection = d3.geoPatterson()\n            .scale(160)\n            .translate([width / 2, height / 1.6])\n            .precision(0.1);\n\n        const path = d3.geoPath()\n            .projection(projection);\n\n        // svg.append(\"path\")\n        //     .datum(d3.geoGraticule10())\n        //     .attr(\"class\", \"graticule\")\n        //     .attr(\"d\", path);\n\n        d3.json(\"https://d3js.org/world-50m.v1.json\", function (error, world) {\n            if (error) throw error;\n\n            svg.insert(\"path\", \".graticule\")\n                .datum(topojson.feature(world, world.objects.land))\n                .attr(\"class\", \"land\")\n                .attr(\"d\", path);\n\n            svg.insert(\"path\", \".graticule\")\n                .datum(topojson.mesh(world, world.objects.countries, function (a, b) { return a !== b; }))\n                .attr(\"class\", \"boundary\")\n                .attr(\"d\", path);\n        });\n\n    }\n}\n\n\n// const svg = d3.select(\"svg\"),\n//     width = +svg.attr(\"width\"),\n//     height = +svg.attr(\"height\");\n\n// const projection = d3\n//     .geoMercator()\n//     .center([0,20]) // youtube video code \n//     .scale(99)\n//     .translate([width / 2, height / 2])\n//     // .precision(0.1); youtube video code \n\n//     d3.queue()\n//     .defer(\n//         d3.json, \n//         \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson\"\n//     ) // world shape \n//     .defer(\n//         d3.csv, \n//         \"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/data_gpsLocSurfer.csv\"\n//     ) /// position of circles \n//     .await(ready);\n\n//     function ready(error, dataGeo, circleData){\n//         /// draw the map \n//         console.log('geography data', dataGeo, \"circle data\", circleData);\n\n//     }\n\n// const path = d3.geoPath()\n//     .projection(projection);\n\n// svg.append(\"path\")\n//     .datum(d3.geoGraticule10())\n//     .attr(\"class\", \"graticule\")\n//     .attr(\"d\", path);\n\n// d3.json(\"https://d3js.org/world-50m.v1.json\", function (error, world) {\n//     if (error) throw error;\n\n//     svg.insert(\"path\", \".graticule\")\n//         .datum(topojson.feature(world, world.objects.land))\n//         .attr(\"class\", \"land\")\n//         .attr(\"d\", path);\n\n//     svg.insert(\"path\", \".graticule\")\n//         .datum(topojson.mesh(world, world.objects.countries, function (a, b) { return a !== b; }))\n//         .attr(\"class\", \"boundary\")\n//         .attr(\"d\", path);\n// });\n\nexport default Map;","import Map from './scripts/maps.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n   const map = new Map();\n   \n})\n\n"],"names":["constructor","this","drawMap","svg","d3","select","width","attr","height","projection","geoPatterson","scale","translate","precision","path","geoPath","json","error","world","insert","datum","topojson","feature","objects","land","mesh","countries","a","b","document","addEventListener","Map"],"sourceRoot":""}